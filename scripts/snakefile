TARGETS, = glob_wildcards("/data/fasta/{name}")

rule all:
 input: 
  "/data/final_results/domain_content.results",
  "/data/final_results/domain_duplication_mode.results",
  "/data/final_results/domain_abundance.results",
  "/data/final_results/domain_versatility.results"


rule pfamscan:
 input:
  fa = "/data/fasta/{target}",
  pfam_db = "/data/pfam_database/"
 output:
  "/data/pfamscan_results/{target}.pfamscan"
 shell:
  "pfam_scan.pl -fasta {input.fa} -dir {input.pfam_db} -outfile {output} -e_seq 1e-5 -e_dom 1e-5"




rule domain_content_matrix:
 input:
  pf_out = expand("/data/pfamscan_results/{target}.pfamscan", target=TARGETS),
  pf_out_dir="/data/pfamscan_results/"
 output:
  "/data/matrix_results/domain_content.matrix"
 shell:
  "calculate_species_level_domain_content_matrix.py {input.pf_out_dir} {output}"




rule domain_duplication_matrix:
 input:
  pf_out = expand("/data/pfamscan_results/{target}.pfamscan", target=TARGETS),
  pf_out_dir="/data/pfamscan_results/"
 output:
  "/data/matrix_results/domain_duplication_mode.matrix"
 shell:
  "calculate_species_level_domain_duplication_mode_matrix.py {input.pf_out_dir} {output}"



rule domain_abundance_matrix:
 input:
  pf_out = expand("/data/pfamscan_results/{target}.pfamscan", target=TARGETS),
  pf_out_dir="/data/pfamscan_results/"

 output:
  "/data/matrix_results/domain_abundance.matrix"
 shell:
  "calculate_species_level_domain_abundance_matrix.py {input.pf_out_dir} {output}"




rule domain_versatility_matrix:
 input:
  pf_out = expand("/data/pfamscan_results/{target}.pfamscan", target=TARGETS),
  pf_out_dir="/data/pfamscan_results/"

 output:
  "/data/matrix_results/domain_versatility.matrix"
 shell:
  "calculate_species_level_domain_versatility_matrix.py {input.pf_out_dir} {output}"



rule domain_content_matrix_analysis:
 input:
  "/data/matrix_results/domain_content.matrix",
  "/data/species.label"
 output:
  "/data/final_results/domain_content.results",
  "/data/final_results/domain_content.png"
 shell:
  "domain_content_matrix_analysis.py {input} {output}"



rule domain_duplication_matrix_analysis:
 input:
  "/data/matrix_results/domain_duplication_mode.matrix",
  "/data/species.label"
 output:
  "/data/final_results/domain_duplication_mode.results",
  "/data/final_results/domain_duplication_mode.png"
 shell:
  "domain_duplication_matrix_analysis.py {input} {output}"



rule domain_abundance_matrix_analysis:
 input:
  "/data/matrix_results/domain_abundance.matrix",
  "/data/species.label"
 output:
  "/data/final_results/domain_abundance.results",
  "/data/final_results/domain_abundance.png"
 shell:
  "domain_abundance_matrix_analysis.py {input} {output}"


rule domain_versatility_matrix_analysis:
 input:
  "/data/matrix_results/domain_versatility.matrix",
  "/data/species.label"
 output:
  "/data/final_results/domain_versatility.results",
  "/data/final_results/domain_versatility.png"

 shell:
  "domain_versatility_matrix_analysis.py {input} {output}"





